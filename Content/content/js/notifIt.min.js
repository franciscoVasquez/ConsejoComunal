function MostrarAlertas(n, t, i) { var r; t == "success" && (r = function (n) { return n ? i(!0) : notif({ type: "error", msg: "ow.. :(", position: "center" }), !0 }, notif_confirm({ message: n, textaccept: "Aceptar", textcancel: "", fullscreen: !0, callback: r, bgcolor: " rgba(56, 56, 56, 0.93)", img: $('<img src="../Content/Images/correcto.png" style="width: 60px;margin-left: 413px;margin-bottom: -60px;">') })); t == "error" && (r = function (n) { n ? i(!0) : notif({ type: "error", msg: "ow.. :(", position: "center" }) }, notif_confirm({ type: "error", message: n, textaccept: "Aceptar", textcancel: "", fullscreen: !0, callback: r, bgcolor: "  rgba(56, 56, 56, 0.93)", img: $('<img src="../Content/Images/error.png" style="width: 60px;margin-left: 413px;margin-bottom: -60px;">') })); t == "info" && (r = function (n) { n ? i(!0) : notif({ type: "error", msg: "ow.. :(", position: "center" }) }, notif_confirm({ type: "error", message: n, textaccept: "Aceptar", textcancel: "", fullscreen: !0, callback: r, bgcolor: "  rgba(56, 56, 56, 0.93)", img: $('<img src="../Content/Images/alerta.png" style="width: 60px;margin-left: 413px;margin-bottom: -60px;">') })); t == "pregunta" && (r = function (n) { n ? notif({ type: "success", msg: "Awesome!", position: "center" }) : notif({ type: "error", msg: "ow.. :(", position: "center" }) }, notif_confirm({ type: "error", message: n, textaccept: "Aceptar", textcancel: "", fullscreen: !0, callback: r, bgcolor: "  rgba(56, 56, 56, 0.93)", img: $('<img src="../Content/Images/validacion.png" style="width: 60px;margin-left: 413px;margin-bottom: -60px;">') })) } (function (n, t) { if (typeof define == "function" && define.amd) define(t); else { var i = t(n.b); n.notif = i.notif; n.notif_dismiss = i.notif_dismiss; n.notif_confirm = i.notif_confirm } })(this, function () { function t(t) { var s = function () { return r("<span>", { id: "notifIt_close", html: "&times" }) }, h = function () { var n = r("<div>", { id: "ui_notifIt" }), t = r("<p>", { html: i.msg }); return n.append(t), n }, r = jQuery, o = function () { r("#ui_notifIt").remove(); clearTimeout(window.notifit_timeout) }, e; o(); window.notifit_timeout = null; var u = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) / 2, f = ["left", "center", "right", "bottom"], i = { type: "default", width: 400, height: 60, position: "right", autohide: 1, msg: "This is my default message", opacity: 1, multiline: 0, fade: 0, bgcolor: "", color: "", timeout: 5e3, zindex: null, offset: 0, callback: null, clickable: !1, animation: "slide" }; if (r.extend(i, t), i.animations = {}, i.animations.slide = { center: { css_start: { top: parseInt(0 - (i.height + 10)), left: u - parseInt(i.width / 2) }, "in": { top: parseInt(10 + i.offset) }, out: { start: { top: parseInt(i.height - i.height / 2) }, end: { top: parseInt(0 - i.height * 2) } } }, bottom: { css_start: { top: "auto", bottom: parseInt(0 - (i.height + 10)), left: u - parseInt(i.width / 2) }, "in": { bottom: parseInt(10 + i.offset) }, out: { start: { bottom: parseInt(i.height - i.height / 2) }, end: { bottom: parseInt(0 - i.height * 2) } } }, right: { css_start: { right: parseInt(0 - (i.width + 10)), right: parseInt(0 - i.width * 2) }, "in": { right: parseInt(10 + i.offset) }, out: { start: { right: parseFloat(i.width - i.width * .9) }, end: { right: parseInt(0 - i.width * 2) } } }, left: { css_start: { left: parseInt(0 - (i.width + 10)) }, "in": { left: parseInt(10 + i.offset) }, out: { start: { left: parseFloat(i.width - i.width * .9) }, end: { left: parseInt(0 - i.width * 2) } } } }, i.animations.zoom = { center: { css_start: { top: 10, left: u - parseInt(i.width / 2), zoom: .01 }, "in": { zoom: 1 }, out: { start: { zoom: 1.3 }, end: { zoom: .01 } } }, bottom: { css_start: { top: "auto", bottom: 10, left: u - parseInt(i.width / 2), zoom: .01 }, "in": { zoom: 1 }, out: { start: { zoom: 1.3 }, end: { zoom: .01 } } }, right: { css_start: { right: 10, zoom: .01 }, "in": { right: parseInt(10 + i.offset), zoom: 1 }, out: { start: { zoom: 1.3 }, end: { zoom: .01 } } }, left: { css_start: { left: 10, zoom: .01 }, "in": { zoom: 1 }, out: { start: { zoom: 1.3 }, end: { zoom: .01 } } } }, i.available_animations = Object.keys(i.animations), !i.available_animations.length) throw new Error("No animations"); if (!f.length) throw new Error("No available positions"); f.indexOf(i.position) === -1 && (i.position = f[0]); i.available_animations.indexOf(i.animation) === -1 && (i.animation = i.available_animations[0]); typeof i.callback != "function" && (i.callback = null); i.width = i.width > 0 ? i.width : i.width === "all" ? screen.width - 60 : 400; i.height < 100 && i.height > 0 && (height = i.height); e = h(); i.clickable && e.append(s()); r("body").append(e); i.zindex && r("#ui_notifIt").css("z-index", i.zindex); i.multiline ? r("#ui_notifIt").css("padding", 15) : (r("#ui_notifIt").css("height", height), r("#ui_notifIt p").css("line-height", height + "px")); r("#ui_notifIt").css({ width: i.width, opacity: i.opacity, "background-color": i.bgcolor, color: i.color }); r("#ui_notifIt").addClass(i.type); i.animations[i.animation][i.position].css_start ? r("#ui_notifIt").css(i.animations[i.animation][i.position].css_start) : r("#ui_notifIt").css(i.animations[i.available_animations[0]][i.position].css_start); r("#ui_notifIt").animate(i.animations[i.animation][i.position].in); i.clickable || r("#ui_notifIt").click(function (t) { t.stopPropagation(); n(i) }); r("body").on("click", "#ui_notifIt #notifIt_close", function () { n(i) }); return i.autohide && (isNaN(i.timeout) || (window.notifit_timeout = setTimeout(function () { n(i) }, i.timeout))), { destroy: o } } function n(n) { var t = jQuery; if (clearTimeout(window.notifit_timeout), n.animation != "fade") { if (n.animations && n.animations[n.animation] && n.animations[n.animation][n.position] && n.animations[n.animation][n.position].out && n.animations[n.animation][n.position].out.start && n.animations[n.animation][n.position].out.end) animation1 = n.animations[n.animation][n.position].out.start, animation2 = n.animations[n.animation][n.position].out.end; else if (n.animations[n.available_animations[0]] && n.animations[n.available_animations[0]][n.position] && n.animations[n.available_animations[0]][n.position].out && n.animations[n.available_animations[0]][n.position].out.start && n.animations[n.available_animations[0]][n.position].out.end) animation1 = n.animations[n.available_animations[0]][n.position].out.start, animation2 = n.animations[n.available_animations[0]][n.position].out.end; else throw new Error("Invalid animation"); t("#ui_notifIt").animate(animation1, 100, function () { t("#ui_notifIt").animate(animation2, 100, function () { t("#ui_notifIt").remove(); n.callback && n.callback() }) }) } else t("#ui_notifIt").fadeOut("slow", function () { t("#ui_notifIt").remove(); n.callback && n.callback() }) } function i(n) { function f() { if (t !== null) return t; var n = i("<button>", { "class": "notifit_confirm_accept", text: r.textaccept }), f = i("<button>", { "class": "notifit_confirm_cancel", text: r.textcancel }), e = i("<div>", { "class": "notifit_confirm_message", text: r.message }), o = r.img; return t = i("<div>", { "class": "notifit_confirm" }), t.append(o).append(e).append(n), r.textcancel != "" && t.append(f), u = i("<div>", { "class": "notifit_confirm_bg" }), t } function e() { t && (r.fullscreen ? (u.hide(), t.hide(), i("body").append(u), i("body").append(t), t.css({ top: u.outerHeight() / 2 - t.outerHeight() / 2, left: "0px", right: "0%", "background-color": r.bgcolor }), u.fadeIn("fast", function () { t.slideDown("fast") })) : (t.css({ top: "250px", left: "5px", right: "330px", "z-index": "2000", display: "none" }), i("body").append(t), t.slideDown("fast"))) } function o() { t && t.slideUp("fast", function () { t.remove() }); u && u.fadeOut("fast", function () { u.remove() }) } function s() { o(); var n = null; return (i(this).hasClass("notifit_confirm_accept") ? n = !0 : i(this).hasClass("notifit_confirm_cancel") && (n = !1), typeof r.callback == "function") ? r.callback(n) : n } function h() { i("html").one("click", ".notifit_confirm_accept, .notifit_confirm_cancel", s) } var i = jQuery, r = i.extend({}, { textaccept: "Accept", textcancel: "", message: "Is that what you want to do?", fullscreen: !1, callback: null, bgcolor: "", img: "" }, n), t = i(".notifit_confirm")[0] ? i(".notifit_confirm") : null, u = i(".notifit_confirm_bg")[0] ? i(".notifit_confirm_bg") : null; f(); e(); h() } return { notif: t, notif_dismiss: n, notif_confirm: i } });
//# sourceMappingURL=notifIt.min.js.map
